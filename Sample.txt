Chapter 1Julia Tutorial1.1  Why Julia?Juliais a modern, expressive, high-performance programming language designed for scientificcomputation and data manipulation.  Originally developed by a group of computer scientistsand mathematicians at  MIT led by  Alan Edelman,Juliacombines three key features  forhighly intensive computing tasks as perhaps no other contemporary programming languagedoes:  it is fast,  easy to learn and use,  and open source.  Among its competitors,C/C++isextremely fast and the open-source compilers available for it are excellent, but it is hard tolearn,  in particular for those with little programming experience,  and cumbersome to use,for example when prototyping new code.1PythonandRare open source and easy to learnand use,  but their numerical performance can be disappointing.2Matlabis relatively fast(although less thanJulia) and it is easy to learn and use, but it is rather costly to purchaseand its age is starting to show.3Julia delivers its swift numerical speed thanks to the relianceon aLLVM(Low Level Virtual Machine)-basedJIT(just-in-time) compiler.  As a beginner,you do not have to be concerned much about what this means except to realize that you donot need to “compile”Juliain the way you compile other languages to achieve lightning-fastspeed.  Thus, you avoid an extra layer of complexity (and, often, maddening frustration whiledealing with obscure compilation errors).
